import turtle as t  # Import the turtle graphics library and alias it as 't'
import random        # Import the random module for generating random numbers

# 1. control keyboard function
def turn_up():
    t.left(2)  # Turn the turtle 2 degrees to the left when the up arrow key is pressed

def turn_down():
    t.right(2)  # Turn the turtle 2 degrees to the right when the down arrow key is pressed

# 2. fire function
def fire():
    global isFire  # Declare isFire as a global variable so we can change its value inside the function
    if not isFire:  # Only fire if a shot isn't already in progress
        isFire = True  # Set firing status to True
        ang = t.heading()  # Store the current angle of the turtle
        while t.ycor() > 0:  # While the turtle's y-coordinate is above the ground (0)
            t.forward(15)  # Move the turtle forward
            t.right(5)  # Gradually curve the shot downward
            d = t.distance(target, 0)  # Measure distance from turtle to target x-position
        t.sety(random.randint(10, 100))  # Randomly reset y-position for visual variety
        if d < 25:  # If the distance from the target is close enough (a hit)
            t.color("blue")  
            t.write("Good! ", False, "center", ("", 15))  # Show success message
        else:  # If the shot missed
            t.color("red")
            t.write("Bad!", False, "center", ("", 15))  # Show failure message
        t.goto(-200, 10)  # Move turtle back to starting position
        t.color("black")
        t.setheading(ang)  # Reset angle to original
        isFire = False  # Allow next shot

t.goto(-300, 0)  # Draw ground line start
t.down()
t.goto(300, 0)  # Draw ground line end

target = random.randint(50, 150)  # Randomly choose x-coordinate for target center
t.pensize(3)  # Make the target thicker
t.color("green")
t.up()
t.goto(target-25, 2)  # Start of the green target line
t.down()
t.goto(target+25, 2)  # End of the green target line

t.color("black")
t.up()
t.goto(-200, 10)  # Set turtle to firing start position
t.setheading(20)  # Aim the turtle at a 20-degree angle

isFire = False  # Initial firing status is False

# Register key presses to control the turtle
t.onkeypress(turn_up, "Up")  # Up arrow increases angle
t.onkeypress(turn_down, "Down")  # Down arrow decreases angle
t.onkeypress(fire, "space")  # Spacebar triggers the fire function

t.listen()  # Listen for keyboard events

t.mainloop()  # Keep the turtle graphics window open
